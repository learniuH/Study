######################################### python 一切皆对象 #########################################
'''
在 Python 中，对象（Object）是指在内存中具有唯一标识符、类型和值的实例
换句话说，他是一个具有属性和方法的实体，这些属性和方法可以被访问和操作
'''

# 赋值给一个变量
num = 10
id(num)     # 1806219392 - 内存地址

# 可以添加到集合对象中

# 可以作为参数传递给函数

# 可以当作函数的返回值
# 通过装饰器的方式：函数作为一个参数进行传递以及返回一个函数对象
def my_wrapper(func_obj):   # 当前外部函数接收的是一个函数对象
    def wrapper():
        print('这是一个装饰器...')
        func_obj()      # 调用外层函数所接收到的函数对象
    return wrapper      # 外部函数返回的是内部函数对象

def print_wrapper():
    print('这是一个测试函数...')

# 将定义的普通函数传递给 my_wrapper
fun_obj = my_wrapper(print_wrapper)     # 接收外部函数的返回
fun_obj()   # 进行内部函数的调用
'''
这是一个装饰器...
这是一个测试函数...
'''
# 装饰器的另外一种写法
@my_wrapper
def print_wrapper():
    print('这是一个测试函数...')
print_wrapper()

